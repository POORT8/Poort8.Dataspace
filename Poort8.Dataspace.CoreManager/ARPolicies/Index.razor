@page "/ar/policies"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [Authorize]

<PageTitle>AR Policies</PageTitle>

<FluentStack Orientation="Orientation.Vertical" VerticalGap=20>
    <FluentLabel Typo="Typography.H1">Authorization Registry Policies</FluentLabel>

    <FluentButton IconStart="@(new Icons.Regular.Size20.AddCircle())" Appearance="Appearance.Accent" OnClick="@(AddNewClicked)">New Policy</FluentButton>

    <FluentDataGrid Items="@Policies?.AsQueryable()">
        <PropertyColumn Title="Issuer" Property="@(p => p.IssuerId)" Sortable="true" />
        <PropertyColumn Title="Actor" Property="@(p => p.SubjectId)" Sortable="true" />
        <PropertyColumn Title="Service Provider" Property="@(p => p.ServiceProvider)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Type)" Sortable="true" />
        <PropertyColumn Title="Not Before" Property="@(p => DateTimeOffset.FromUnixTimeSeconds(p.NotBefore).LocalDateTime)" Sortable="true" />
        <PropertyColumn Title="Not On Or After" Property="@(p => DateTimeOffset.FromUnixTimeSeconds(p.Expiration).LocalDateTime)" Sortable="true" />
        <TemplateColumn Title="Actions" Align="@Align.End">
            <FluentButton Title="Details" IconEnd="@(new Icons.Regular.Size16.Info())" OnClick="@(() => DetailsClicked(@context))" />
            <FluentButton Title="Properties" IconEnd="@(new Icons.Regular.Size16.TagMultiple())" OnClick="@(() => PropertiesClicked(@context))" />
            <FluentButton Title="Delete" IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => DeleteClicked(@context))" />
        </TemplateColumn>
    </FluentDataGrid>
</FluentStack>
