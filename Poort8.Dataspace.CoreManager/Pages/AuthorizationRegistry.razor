@page "/authorizationregistry"
@using Poort8.Dataspace.AuthorizationRegistry.Entities;

<PageTitle>Authorization Registry</PageTitle>

<h1>Organisaties</h1>

<TableMolecule TItem=Organization Items=_organizations Context="organization" RowClick="OnOrganizationRowClick">
    <TableHeader>
        <th>Identifier</th>
        <th>Name</th>
        <th>URL</th>
        <th>Representative</th>
        <th>Invoicing contact</th>
    </TableHeader>
    <RowTemplate>
        <td>@organization.Identifier</td>
        <td>@organization.Name</td>
        <td>@organization.Url</td>
        <td>@organization.Representative</td>
        <td>@organization.InvoicingContact</td>
    </RowTemplate>
</TableMolecule>

<button type="button" @onclick=AddNewOrganization disabled=@(_newOrganization is not null)>Voeg toe</button>

<br>

@if (EditedOrganization is not null)
{
    <EditForm Model="@EditedOrganization">
        <h3>Organization</h3>
        <div class="form-group row">
            <label for="identifier" class="col-sm-2 col-form-label">
                Identifier
            </label>
            <div class="col-sm-10">
                @if (EditedOrganization == _selectedOrganization)
                {
                    <CustomInputText id="identifier" class="form-control" placeholder="Identifier" disabled @bind-Value=@EditedOrganization.Identifier />
                }
                else
                {
                    <CustomInputText id="identifier" class="form-control" placeholder="Identifier" @bind-Value=@EditedOrganization.Identifier />
                }
            </div>
        </div>
        <div class="form-group row">
            <label for="name" class="col-sm-2 col-form-label">
                Name
            </label>
            <div class="col-sm-10">
                <CustomInputText id="name" class="form-control" placeholder="Name" @bind-Value="EditedOrganization.Name" />
            </div>
        </div>
        <div class="form-group row">
            <label for="url" class="col-sm-2 col-form-label">
                URL
            </label>
            <div class="col-sm-10">
                <CustomInputText id="url" class="form-control" placeholder="URL" @bind-Value="EditedOrganization.Url" />
            </div>
        </div>
        <div class="form-group row">
            <label for="representative" class="col-sm-2 col-form-label">
                Representative
            </label>
            <div class="col-sm-10">
                <CustomInputText id="representative" class="form-control" placeholder="Representative" @bind-Value="EditedOrganization.Representative" />
            </div>
        </div>
        <div class="form-group row">
            <label for="invoicingContact" class="col-sm-2 col-form-label">
                Invoicing contact
            </label>
            <div class="col-sm-10">
                <CustomInputText id="invoicingContact" class="form-control" placeholder="Invoicing contact" @bind-Value="EditedOrganization.InvoicingContact" />
            </div>
        </div>
        <br>
        <h4>Employees</h4>
        <TableMolecule TItem=Employee Items=EditedOrganization.Employees.ToList() Context="employee">
            <TableHeader>
                <th>Employee ID</th>
                <th>First name</th>
                <th>Last name</th>
                <th>Telephone</th>
                <th>Email</th>
            </TableHeader>
            <RowTemplate>
                <td>@employee.EmployeeId</td>
                <td>@employee.GivenName</td>
                <td>@employee.FamilyName</td>
                <td>@employee.Telephone</td>
                <td>@employee.Email</td>
            </RowTemplate>
        </TableMolecule>

        <CustomInputText id="employeeId" class="form-control" placeholder="Employee ID" @bind-Value=@_employee.EmployeeId />
        <CustomInputText id="firstName" class="form-control" placeholder="First name" @bind-Value=@_employee.GivenName />
        <CustomInputText id="lastName" class="form-control" placeholder="Last name" @bind-Value=@_employee.FamilyName />
        <CustomInputText id="telephone" class="form-control" placeholder="Telephone" @bind-Value=@_employee.Telephone />
        <CustomInputText id="email" class="form-control" placeholder="Email" @bind-Value=@_employee.Email />
        <button type="button" @onclick=AddEmployee disabled=@(string.IsNullOrWhiteSpace(_employee.EmployeeId) || string.IsNullOrWhiteSpace(_employee.GivenName) || string.IsNullOrWhiteSpace(_employee.FamilyName) || EditedOrganization.Employees.Any(e => e.EmployeeId.Equals(_employee.EmployeeId, StringComparison.OrdinalIgnoreCase)))>Voeg employee toe</button>
        <button type="button" @onclick=DeleteEmployee disabled=@(!EditedOrganization.Employees.Any(e => e.EmployeeId.Equals(_employee.EmployeeId, StringComparison.OrdinalIgnoreCase)))>Verwijder employee</button>
        <br>
        <h4>Properties</h4>
        <TableMolecule TItem=Property Items=EditedOrganization.Properties.ToList() Context="property">
            <TableHeader>
                <th>Key</th>
                <th>Value</th>
                <th>Identifier</th>
            </TableHeader>
            <RowTemplate>
                <td>@property.Key</td>
                <td>@property.Value</td>
                <td>@property.IsIdentifier</td>
            </RowTemplate>
        </TableMolecule>

        <CustomInputText id="key" class="form-control" placeholder="Key" @bind-Value=@_organizationProperty.Key />
        <CustomInputText id="value" class="form-control" placeholder="Value" @bind-Value=@_organizationProperty.Value />
        <input type="checkbox" id="isIdentifier" name="isIdentifier" @bind=@_organizationProperty.IsIdentifier />
        <label for="isIdentifier">Identifier</label><br>
        <button type="button" @onclick=AddOrganizationProperty disabled=@(string.IsNullOrWhiteSpace(_organizationProperty.Key) || string.IsNullOrWhiteSpace(_organizationProperty.Value) || EditedOrganization.Properties.Any(p => p.Key.Equals(_organizationProperty.Key, StringComparison.OrdinalIgnoreCase)))>Voeg property toe</button>
        <button type="button" @onclick=DeleteOrganizationProperty disabled=@(!EditedOrganization.Properties.Any(p => p.Key.Equals(_organizationProperty.Key, StringComparison.OrdinalIgnoreCase)))>Verwijder property</button>
    </EditForm>

    <br>

    if (EditedOrganization == _selectedOrganization)
    {
        <button type="button" @onclick=UpdateOrganization disabled=@DisableUpdateOrganization(EditedOrganization)>Update organization</button>
        <button type="button" @onclick=DeleteOrganization>Verwijder organization</button>
    }
    else
    {
        <button type="button" @onclick=CreateOrganization disabled=@DisableCreateOrganization(EditedOrganization)>Maak organization aan</button>
    }

    <br>
}

<h1>Producten</h1>

<TableMolecule TItem=Product Items=_products Context="product" RowClick="OnProductRowClick">
    <TableHeader>
        <th>Product ID</th>
        <th>Name</th>
        <th>Description</th>
        <th>Provider</th>
        <th>URL</th>
    </TableHeader>
    <RowTemplate>
        <td>@product.ProductId</td>
        <td>@product.Name</td>
        <td>@product.Description</td>
        <td>@product.Provider</td>
        <td>@product.Url</td>
    </RowTemplate>
</TableMolecule>

<button type="button" @onclick=AddNewProduct disabled=@(_newProduct is not null)>Voeg toe</button>

<br>

@if (EditedProduct is not null)
{
    <EditForm Model="@EditedProduct">
        <h3>Product</h3>
        <div class="form-group row">
            <label for="productId" class="col-sm-2 col-form-label">
                Product ID
            </label>
            <div class="col-sm-10">
                @if (EditedProduct == _selectedProduct)
                {
                    <CustomInputText id="productId" class="form-control" placeholder="Product ID" disabled @bind-Value=@EditedProduct.ProductId />
                }
                else
                {
                    <CustomInputText id="productId" class="form-control" placeholder="Product ID" @bind-Value=@EditedProduct.ProductId />
                }
            </div>
        </div>
        <div class="form-group row">
            <label for="productName" class="col-sm-2 col-form-label">
                Name
            </label>
            <div class="col-sm-10">
                <CustomInputText id="productName" class="form-control" placeholder="Name" @bind-Value="EditedProduct.Name" />
            </div>
        </div>
        <div class="form-group row">
            <label for="productDescription" class="col-sm-2 col-form-label">
                Description
            </label>
            <div class="col-sm-10">
                <CustomInputText id="productDescription" class="form-control" placeholder="Description" @bind-Value="EditedProduct.Description" />
            </div>
        </div>
        <div class="form-group row">
            <label for="productProvider" class="col-sm-2 col-form-label">
                Provider
            </label>
            <div class="col-sm-10">
                <CustomInputText id="productProvider" class="form-control" placeholder="Provider" @bind-Value="EditedProduct.Provider" />
            </div>
        </div>
        <div class="form-group row">
            <label for="productUrl" class="col-sm-2 col-form-label">
                URL
            </label>
            <div class="col-sm-10">
                <CustomInputText id="productUrl" class="form-control" placeholder="URL" @bind-Value="EditedProduct.Url" />
            </div>
        </div>

        <br>
        <h4>Features</h4>
        <TableMolecule TItem=Feature Items=EditedProduct.Features.ToList() Context="feature">
            <TableHeader>
                <th>Feature ID</th>
                <th>Name</th>
                <th>Description</th>
            </TableHeader>
            <RowTemplate>
                <td>@feature.FeatureId</td>
                <td>@feature.Name</td>
                <td>@feature.Description</td>
            </RowTemplate>
        </TableMolecule>

        <br>
        <h4>Properties</h4>
        <TableMolecule TItem=Property Items=EditedProduct.Properties.ToList() Context="property">
            <TableHeader>
                <th>Key</th>
                <th>Value</th>
                <th>Identifier</th>
            </TableHeader>
            <RowTemplate>
                <td>@property.Key</td>
                <td>@property.Value</td>
                <td>@property.IsIdentifier</td>
            </RowTemplate>
        </TableMolecule>

        <CustomInputText id="productKey" class="form-control" placeholder="Key" @bind-Value=@_productProperty.Key />
        <CustomInputText id="productValue" class="form-control" placeholder="Value" @bind-Value=@_productProperty.Value />
        <input type="checkbox" id="isProductIdentifier" name="isProductIdentifier" @bind=@_productProperty.IsIdentifier />
        <label for="isProductIdentifier">Identifier</label><br>
        <button type="button" @onclick=AddProductProperty disabled=@(string.IsNullOrWhiteSpace(_productProperty.Key) || string.IsNullOrWhiteSpace(_productProperty.Value) || EditedProduct.Properties.Any(p => p.Key.Equals(_productProperty.Key, StringComparison.OrdinalIgnoreCase)))>Voeg property toe</button>
        <button type="button" @onclick=DeleteProductProperty disabled=@(!EditedProduct.Properties.Any(p => p.Key.Equals(_productProperty.Key, StringComparison.OrdinalIgnoreCase)))>Verwijder property</button>
    </EditForm>

    <br>

    if (EditedProduct == _selectedProduct)
    {
        <button type="button" @onclick=UpdateProduct disabled=@DisableUpdateProduct(EditedProduct)>Update product</button>
        <button type="button" @onclick=DeleteProduct>Verwijder product</button>
    }
    else
    {
        <button type="button" @onclick=CreateProduct disabled=@DisableCreateProduct(EditedProduct)>Maak product aan</button>
    }

    <br>
}

<h1>Features</h1>

<TableMolecule TItem=Feature Items=_features Context="feature" RowClick="OnFeatureRowClick">
    <TableHeader>
        <th>Feature ID</th>
        <th>Name</th>
        <th>Description</th>
    </TableHeader>
    <RowTemplate>
        <td>@feature.FeatureId</td>
        <td>@feature.Name</td>
        <td>@feature.Description</td>
    </RowTemplate>
</TableMolecule>

<button type="button" @onclick=AddNewFeature disabled=@(_newFeature is not null)>Voeg toe</button>

<br>

@if (EditedFeature is not null)
{
    <EditForm Model="@EditedFeature">
        <h3>Feature</h3>
        <div class="form-group row">
            <label for="featureId" class="col-sm-2 col-form-label">
                Feature ID
            </label>
            <div class="col-sm-10">
                @if (EditedFeature == _selectedFeature)
                {
                    <CustomInputText id="featureId" class="form-control" placeholder="Feature ID" disabled @bind-Value=@EditedFeature.FeatureId />
                }
                else
                {
                    <CustomInputText id="featureId" class="form-control" placeholder="Feature ID" @bind-Value=@EditedFeature.FeatureId />
                }
            </div>
        </div>
        <div class="form-group row">
            <label for="featureName" class="col-sm-2 col-form-label">
                Name
            </label>
            <div class="col-sm-10">
                <CustomInputText id="featureName" class="form-control" placeholder="Name" @bind-Value="EditedFeature.Name" />
            </div>
        </div>
        <div class="form-group row">
            <label for="featureDescription" class="col-sm-2 col-form-label">
                Description
            </label>
            <div class="col-sm-10">
                <CustomInputText id="featureDescription" class="form-control" placeholder="Description" @bind-Value="EditedFeature.Description" />
            </div>
        </div>

        <br>
        <h4>Products</h4>
        <TableMolecule TItem=Product Items=EditedFeature.Products.ToList() Context="product">
            <TableHeader>
                <th>Product ID</th>
                <th>Name</th>
                <th>Description</th>
            </TableHeader>
            <RowTemplate>
                <td>@product.ProductId</td>
                <td>@product.Name</td>
                <td>@product.Description</td>
            </RowTemplate>
        </TableMolecule>

        <CustomInputText id="featureProduct" class="form-control" placeholder="Product ID" @bind-Value=@_featureProductId />
        <button type="button" @onclick=AddFeatureProduct disabled=@(_products?.Any(p => p.ProductId.Equals(_featureProductId, StringComparison.OrdinalIgnoreCase)) != true || EditedFeature.Products.Any(p => p.ProductId.Equals(_featureProductId, StringComparison.OrdinalIgnoreCase)))>Voeg product toe aan feature</button>
        <button type="button" @onclick=DeleteFeatureProduct disabled=@(!EditedFeature.Products.Any(p => p.ProductId.Equals(_featureProductId, StringComparison.OrdinalIgnoreCase)))>Verwijder product van feature</button>

        <br>
        <h4>Properties</h4>
        <TableMolecule TItem=Property Items=EditedFeature.Properties.ToList() Context="property">
            <TableHeader>
                <th>Key</th>
                <th>Value</th>
                <th>Identifier</th>
            </TableHeader>
            <RowTemplate>
                <td>@property.Key</td>
                <td>@property.Value</td>
                <td>@property.IsIdentifier</td>
            </RowTemplate>
        </TableMolecule>

        <CustomInputText id="featureKey" class="form-control" placeholder="Key" @bind-Value=@_featureProperty.Key />
        <CustomInputText id="featureValue" class="form-control" placeholder="Value" @bind-Value=@_featureProperty.Value />
        <input type="checkbox" id="isFeatureIdentifier" name="isFeatureIdentifier" @bind=@_featureProperty.IsIdentifier />
        <label for="isFeatureIdentifier">Identifier</label><br>
        <button type="button" @onclick=AddFeatureProperty disabled=@(string.IsNullOrWhiteSpace(_featureProperty.Key) || string.IsNullOrWhiteSpace(_featureProperty.Value) || EditedFeature.Properties.Any(p => p.Key.Equals(_featureProperty.Key, StringComparison.OrdinalIgnoreCase)))>Voeg property toe</button>
        <button type="button" @onclick=DeleteFeatureProperty disabled=@(!EditedFeature.Properties.Any(p => p.Key.Equals(_featureProperty.Key, StringComparison.OrdinalIgnoreCase)))>Verwijder property</button>
    </EditForm>

    <br>

    if (EditedFeature == _selectedFeature)
    {
        <button type="button" @onclick=UpdateFeature disabled=@DisableUpdateFeature(EditedFeature)>Update feature</button>
        <button type="button" @onclick=DeleteFeature>Verwijder feature</button>
    }
    else
    {
        <button type="button" @onclick=CreateFeature disabled=@DisableCreateFeature(EditedFeature)>Maak feature aan</button>
    }

    <br>
}

<h1>Policies</h1>

<TableMolecule TItem=Policy Items=_policies Context="policy" RowClick="OnPolicyRowClick">
    <TableHeader>
        <th>Policy ID</th>
        <th>Use case</th>
        <th>Issuer</th>
        <th>Subject</th>
        <th>Resource</th>
        <th>Action</th>
        <th>Issued at</th>
        <th>Not before</th>
        <th>Expiration</th>
    </TableHeader>
    <RowTemplate>
        <td>@policy.PolicyId</td>
        <td>@policy.UseCase</td>
        <td>@policy.IssuerId</td>
        <td>@policy.SubjectId</td>
        <td>@policy.ResourceId</td>
        <td>@policy.Action</td>
        <td>@(DateTimeOffset.FromUnixTimeSeconds(policy.IssuedAt).ToLocalTime().ToString("G"))</td>
        <td>@(DateTimeOffset.FromUnixTimeSeconds(policy.NotBefore).ToLocalTime().ToString("G"))</td>
        <td>@(DateTimeOffset.FromUnixTimeSeconds(policy.Expiration).ToLocalTime().ToString("G"))</td>
    </RowTemplate>
</TableMolecule>

<button type="button" @onclick=AddNewPolicy disabled=@(_newPolicy is not null)>Voeg toe</button>

<br>

@if (EditedPolicy is not null)
{
    <EditForm Model="@EditedPolicy">
        <h3>Policy</h3>
        <div class="form-group row">
            <label for="policyUseCase" class="col-sm-2 col-form-label">
                Use case
            </label>
            <div class="col-sm-10">
                <CustomInputText id="policyUseCase" class="form-control" placeholder="Use case" @bind-Value="EditedPolicy.UseCase" />
            </div>
        </div>
        <div class="form-group row">
            <label for="policyIssuer" class="col-sm-2 col-form-label">
                Issuer
            </label>
            <div class="col-sm-10">
                <CustomInputText id="policyIssuer" class="form-control" placeholder="Issuer" @bind-Value="EditedPolicy.IssuerId" />
            </div>
        </div>
        <div class="form-group row">
            <label for="policySubject" class="col-sm-2 col-form-label">
                Subject
            </label>
            <div class="col-sm-10">
                <CustomInputText id="policySubject" class="form-control" placeholder="Subject" @bind-Value="EditedPolicy.SubjectId" />
            </div>
        </div>
        <div class="form-group row">
            <label for="policyResource" class="col-sm-2 col-form-label">
                Resource
            </label>
            <div class="col-sm-10">
                <CustomInputText id="policyResource" class="form-control" placeholder="Resource" @bind-Value="EditedPolicy.ResourceId" />
            </div>
        </div>
        <div class="form-group row">
            <label for="policyAction" class="col-sm-2 col-form-label">
                Action
            </label>
            <div class="col-sm-10">
                <CustomInputText id="policyAction" class="form-control" placeholder="Action" @bind-Value="EditedPolicy.Action" />
            </div>
        </div>
        <div class="form-group row">
            <label for="notBefore">Not before:</label>
            <input type="datetime-local" id="notBefore" name="notBefore" @bind-value=@policyNotBefore />
        </div>
        <div class="form-group row">
            <label for="expiration">Expiration:</label>
            <input type="datetime-local" id="expiration" name="expiration" @bind-value=@policyExpiration />
        </div>
        <br>
        <h4>Properties</h4>
        <TableMolecule TItem=Property Items=EditedPolicy.Properties.ToList() Context="property">
            <TableHeader>
                <th>Key</th>
                <th>Value</th>
                <th>Identifier</th>
            </TableHeader>
            <RowTemplate>
                <td>@property.Key</td>
                <td>@property.Value</td>
                <td>@property.IsIdentifier</td>
            </RowTemplate>
        </TableMolecule>

        <CustomInputText id="policyKey" class="form-control" placeholder="Key" @bind-Value=@_policyProperty.Key />
        <CustomInputText id="policyValue" class="form-control" placeholder="Value" @bind-Value=@_policyProperty.Value />
        <input type="checkbox" id="isPolicyIdentifier" name="isPolicyIdentifier" @bind=@_policyProperty.IsIdentifier />
        <label for="isPolicyIdentifier">Identifier</label><br>
        <button type="button" @onclick=AddPolicyProperty disabled=@(string.IsNullOrWhiteSpace(_policyProperty.Key) || string.IsNullOrWhiteSpace(_policyProperty.Value) || EditedPolicy.Properties.Any(p => p.Key.Equals(_policyProperty.Key, StringComparison.OrdinalIgnoreCase)))>Voeg property toe</button>
        <button type="button" @onclick=DeletePolicyProperty disabled=@(!EditedPolicy.Properties.Any(p => p.Key.Equals(_policyProperty.Key, StringComparison.OrdinalIgnoreCase)))>Verwijder property</button>
    </EditForm>

    <br>

    if (EditedPolicy == _selectedPolicy)
    {
        <button type="button" @onclick=UpdatePolicy disabled=@DisableUpdatePolicy(EditedPolicy)>Update policy</button>
        <button type="button" @onclick=DeletePolicy>Verwijder policy</button>
    }
    else
    {
        <button type="button" @onclick=CreatePolicy disabled=@DisableCreatePolicy(EditedPolicy)>Maak policy aan</button>
    }

    <br>
}