@page "/organizationregistry"

@using Microsoft.EntityFrameworkCore;
@using Poort8.Dataspace.OrganizationRegistry;

@inject IOrganizationRegistry OrganizationRegistryService

<PageTitle>Organization Registery</PageTitle>

<h1>Add Organization</h1>

<EditForm Model="@Organization" OnSubmit="@Submit">
    <InputText @bind-Value="Organization!.Identifier" />
    <InputText @bind-Value="Organization!.Name" />
    <InputText @bind-Value="Organization!.Properties.FirstOrDefault().Key" />
    <InputText @bind-Value="Organization!.Properties.FirstOrDefault().Value" />
    <button type="submit">Submit</button>
</EditForm>

@foreach (var organization in Organizations)
{
    <div>@organization.Identifier: @organization.Name - @string.Join(",", organization.Properties.Select(p => p.Value))</div>
}

@code {
    public Organization Organization { get; set; }
    public IReadOnlyList<Organization> Organizations { get; set; } = new List<Organization>();

    protected override async Task OnInitializedAsync()
    {
        var adherence = new Adherence();
        var roles = new List<OrganizationRole>();
        var properties = new List<OrganizationProperty>() { new OrganizationProperty("key", "value") };
        Organization = new Organization("id", "name", adherence, roles, properties);

        Organizations = await OrganizationRegistryService.ReadOrganizations();

        // var org = await OrganizationRegistryService.CreateOrganization(Organization);
        // org = await OrganizationRegistryService.ReadOrganization("id");
        // var orgs = await OrganizationRegistryService.ReadOrganizations();
        // org = await OrganizationRegistryService.UpdateOrganization(Organization);
        // var success = await OrganizationRegistryService.DeleteOrganization("id");

        await base.OnInitializedAsync();
    }

    private async Task Submit()
    {
        await OrganizationRegistryService.CreateOrganization(Organization);

        Organizations = await OrganizationRegistryService.ReadOrganizations();
    }
}